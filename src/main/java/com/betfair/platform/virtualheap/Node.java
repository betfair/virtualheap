/* Copyright 2013, The Sporting Exchange Limited Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. */package com.betfair.platform.virtualheap;import com.betfair.platform.virtualheap.projection.NodeProjector;public abstract class Node {    final int id;    final Heap heap;    int index;    String name;    Object projection = null;    Node(int id, Heap heap) {        this.id = id;        this.heap = heap;    }    void visitChildren(NodeVisitor visitor) {    }    public <T> T project(NodeProjector<T> projector) {        if (projection == null) {            projection = projector.project(this);        }        return (T) projection;    }    public abstract NodeType getType();    protected void beforeMutation() {        heap.assertCanUpdate();    }    @Override    public String toString() {        return "Node{" +                "id=" + id +                ", heap=" + heap +                ", index=" + index +                ", name='" + name + '\'' +                ", nodeType='" + getType() + '\'' +                ", projection=" + projection +                '}';    }    public String prettyPrint() {        return prettyPrint(0, false);    }    protected abstract String prettyPrint(int depth, boolean collapse);}