/* Copyright 2013, The Sporting Exchange Limited Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. */package com.betfair.platform.virtualheap.projection;import com.betfair.platform.virtualheap.HListComplex;import com.betfair.platform.virtualheap.ListNode;public class ComplexListProjection<T> extends AbstractListProjection<T> implements HListComplex<T> {    private NodeProjector<T> valueProjector;    public ComplexListProjection(ListNode node, NodeProjector<T> valueProjector) {		super(node);        this.valueProjector = valueProjector;	}	public T get(int index) {        if (index >= 0 && index < size()) {            return node.getIndexAt(index).project(valueProjector);        } else {            throw new IndexOutOfBoundsException();        }    }    @Override    public T insertAt(int index) {        return node.insertAt(index, valueProjector.getType()).project(valueProjector);    }    @Override    public T addLast() {        return insertAt(size());    }    @Override    public T addFirst() {        return insertAt(0);    }    @Override    public T push() {        return addFirst();    }}